{"ast":null,"code":"var _jsxFileName = \"/Users/denizbayram/Documents/GitHub/team3_final-project/team milestones/5- Frontend(All pages)/frontend_allpages/src/SellerRegistration.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SellerRegistration() {\n  _s();\n\n  // formState: (1) initial, (2) loading, (3) validationFailed, (4) successful, (5) unsuccessful\n  const [formState, setFormState] = useState(\"initial\");\n  let firstNameField;\n  let lastNameField;\n  let emailField;\n  let passwordField;\n  let phoneField;\n  let checkBox;\n  let avatarInput; // FormData is a constructor for creating an object\n  // that works like an HTML form element\n\n  const formData = new FormData(); // errorsState is for tracking the validation errors\n\n  const [errorsState, setErrorsState] = useState([]); // attachFile() will append to formData the avatar file\n\n  const attachFile = evt => {\n    // Create an array from the file attachments\n    const files = Array.from(evt.target.files); // For each attachment, append the file to formData\n\n    files.forEach((fileAttachment, index) => {\n      formData.append(index, fileAttachment);\n    });\n  };\n\n  function registerUser() {\n    const errors = []; // 1. Validate all of the required fields\n\n    if (firstNameField.value.length === 0) {\n      errors.push(\"Please enter your first name\");\n    }\n\n    if (lastNameField.value.length === 0) {\n      errors.push(\"Please enter your last name\");\n    }\n\n    if (emailField.value.length === 0) {\n      errors.push(\"Please enter valid email\");\n    }\n\n    if (passwordField.value.length === 0) {\n      errors.push(\"Please enter valid password\");\n    }\n\n    if (checkBox.checked === false) {\n      errors.push(\"Please accept the terms & conditions\");\n    } // 1.1 If there are errors, set the state to \"validationFailed\"\n\n\n    if (errors.length > 0) {\n      setFormState(\"validationFailed\");\n      setErrorsState(errors);\n    } // 1.2 If there are no errors, set the state to \"loading\"\n    else {\n      setFormState(\"loading\");\n      setErrorsState([]);\n      formData.append('firstName', firstNameField.value);\n      formData.append('lastName', lastNameField.value);\n      formData.append('email', emailField.value);\n      formData.append('password', passwordField.value);\n      formData.append('phoneNumber', phoneField.value);\n      fetch(`${process.env.REACT_APP_BACKEND}/user/register`, {\n        method: 'POST',\n        body: formData\n      }) // The .json() method will convert a 'stringified' object to a JavaScript object\n      .then(backendResponseJson => backendResponseJson.json()) // 2.1 If the submission is successful, set state to \"successful\"\n      .then(backendResponse => {\n        console.log(backendResponse.status);\n\n        if (backendResponse.status === \"ok\") {\n          setFormState(\"successful\");\n        } else {\n          setFormState(\"unsuccessful\");\n        }\n      }) // 2.2 If the submission is successful, set state to \"unsucessful\"\n      .catch(err => {\n        console.log(err);\n        setFormState(\"unsuccessful\");\n      });\n    }\n  } // errorState \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"registration-bg\",\n    className: \"py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container border border-5 border-secondary\",\n      style: {\n        \"margin-top\": \"0em\",\n        \"max-width\": \"35em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Seller Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your firstname *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (theInputElement) {\n          firstNameField = theInputElement;\n        },\n        className: \"field form-control\",\n        name: \"firstName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your lastname *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          lastNameField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"lastName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your email *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          emailField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"email\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter a password *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          passwordField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"password\",\n        autocomplete: \"off\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your phone (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          phoneField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"phone\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload your profile picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: element => {\n          avatarInput = element;\n        },\n        onChange: attachFile,\n        className: \"field form-control\",\n        id: \"photo\",\n        name: \"file\",\n        type: \"file\",\n        multiple: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Do you agree to terms & conditions? *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisCheckbox) {\n          checkBox = thisCheckbox;\n        },\n        className: \"checkbox\",\n        name: \"termsConditions\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), \" Yes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 18\n      }, this), formState !== \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: registerUser,\n          className: \"btn btn-primary\",\n          style: {\n            \"padding\": \"10px\",\n            \"font-size\": \"16px\"\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), formState === \"validationFailed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: errorsState.map(error => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 44\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), formState === \"successful\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: \"You have a successfully created an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), formState === \"unsuccessful\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: \"An error occured. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), formState === \"loading\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SellerRegistration, \"1tejORpHWvZ+JFYYnQCvDadk4/M=\");\n\n_c = SellerRegistration;\nexport default SellerRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerRegistration\");","map":{"version":3,"sources":["/Users/denizbayram/Documents/GitHub/team3_final-project/team milestones/5- Frontend(All pages)/frontend_allpages/src/SellerRegistration.js"],"names":["useState","SellerRegistration","formState","setFormState","firstNameField","lastNameField","emailField","passwordField","phoneField","checkBox","avatarInput","formData","FormData","errorsState","setErrorsState","attachFile","evt","files","Array","from","target","forEach","fileAttachment","index","append","registerUser","errors","value","length","push","checked","fetch","process","env","REACT_APP_BACKEND","method","body","then","backendResponseJson","json","backendResponse","console","log","status","catch","err","theInputElement","thisInputField","element","thisCheckbox","map","error"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nfunction SellerRegistration() {\n\n    // formState: (1) initial, (2) loading, (3) validationFailed, (4) successful, (5) unsuccessful\n    const [formState, setFormState] = useState(\"initial\");\n\n    let firstNameField;\n    let lastNameField;\n    let emailField;\n    let passwordField;\n    let phoneField;\n    let checkBox;\n    let avatarInput;\n\n    // FormData is a constructor for creating an object\n    // that works like an HTML form element\n    const formData = new FormData();\n\n    // errorsState is for tracking the validation errors\n    const [errorsState, setErrorsState] = useState([]);\n\n    // attachFile() will append to formData the avatar file\n    const attachFile = (evt) => {\n        // Create an array from the file attachments\n        const files = Array.from(evt.target.files);\n\n        // For each attachment, append the file to formData\n        files.forEach(\n            (fileAttachment, index) => {\n                formData.append(index, fileAttachment);\n            }\n        );\n    }\n\n    function registerUser() {\n\n        const errors = [];\n        \n        // 1. Validate all of the required fields\n        if( firstNameField.value.length === 0 ) {\n            errors.push(\"Please enter your first name\");\n        }\n        if( lastNameField.value.length === 0 ) {\n            errors.push(\"Please enter your last name\");\n        }\n        if( emailField.value.length === 0 ) {\n            errors.push(\"Please enter valid email\");\n        }\n        if( passwordField.value.length === 0 ) {\n            errors.push(\"Please enter valid password\");\n        }\n        if( checkBox.checked === false ) {\n            errors.push(\"Please accept the terms & conditions\");\n        }\n\n        // 1.1 If there are errors, set the state to \"validationFailed\"\n        if(errors.length > 0) {\n            setFormState(\"validationFailed\");\n            setErrorsState(errors);\n        }\n\n        // 1.2 If there are no errors, set the state to \"loading\"\n        else {\n            setFormState(\"loading\");\n            setErrorsState([]);\n           \n            \n            formData.append('firstName', firstNameField.value);\n            formData.append('lastName', lastNameField.value);\n            formData.append('email', emailField.value);\n            formData.append('password', passwordField.value);\n            formData.append('phoneNumber', phoneField.value);\n\n            fetch(\n                `${process.env.REACT_APP_BACKEND}/user/register`,\n                {\n                    method: 'POST',\n                    body: formData\n                }\n            )\n            // The .json() method will convert a 'stringified' object to a JavaScript object\n            .then(\n                (backendResponseJson) => backendResponseJson.json()\n            )\n             // 2.1 If the submission is successful, set state to \"successful\"\n            .then(\n                (backendResponse) => {\n                    console.log(backendResponse.status);\n                    if (backendResponse.status === \"ok\") {\n                        setFormState(\"successful\");\n                    } else {\n                        setFormState(\"unsuccessful\");\n                    }\n                }\n            )\n            // 2.2 If the submission is successful, set state to \"unsucessful\"\n            .catch(\n                (err) => {\n                    console.log(err);\n                    setFormState(\"unsuccessful\");\n                }\n            );\n        }\n    }\n\n    // errorState \n    return (\n        <div id=\"registration-bg\" className=\"py-5\">\n        <div className=\"container border border-5 border-secondary\" style={{\"margin-top\": \"0em\", \"max-width\": \"35em\"}}>\n            \n            <h1>Seller Registration</h1>\n            <br/>\n\n            <label>Enter your firstname *</label>\n            <input ref={\n                function(theInputElement) {\n                    firstNameField = theInputElement;\n                }\n            } className=\"field form-control\" name=\"firstName\" type=\"text\" />\n\n            <label>Enter your lastname *</label>\n            <input \n            ref={\n                function(thisInputField) {\n                    lastNameField = thisInputField;\n                }\n            } \n            className=\"field form-control\" name=\"lastName\" type=\"text\" />\n\n            <label>Enter your email *</label>\n            <input ref={\n                function(thisInputField) {\n                    emailField = thisInputField\n                }\n            }\n            className=\"field form-control\" name=\"email\" type=\"text\" />\n\n            <label>Enter a password *</label>\n            <input ref={\n                function(thisInputField) {\n                    passwordField = thisInputField\n                }\n            }\n            className=\"field form-control\" name=\"password\" autocomplete=\"off\" type=\"password\" />\n\n            <label>Enter your phone (optional)</label>\n            <input ref={\n                function(thisInputField) {\n                    phoneField = thisInputField\n                }\n            }\n            className=\"field form-control\" name=\"phone\" type=\"text\" />\n\n            <br/><br/>\n\n            <label>Upload your profile picture</label>\n            <input ref={(element)=>{ avatarInput = element}} \n            onChange={attachFile}\n            className=\"field form-control\" id=\"photo\" name=\"file\" \n            type=\"file\" multiple=\"multiple\"/>\n\n            <br/><br/>\n\n            <label>Do you agree to terms &amp; conditions? *</label>\n            <input ref={\n                function(thisCheckbox) {\n                    checkBox = thisCheckbox;\n                }\n            }\n            className=\"checkbox\" name=\"termsConditions\" type=\"checkbox\" /> Yes\n\n            <br/><br/>\n\n\n            {\n                formState !== \"loading\" &&\n                <div>\n                    <button \n                    onClick={registerUser}\n                    className=\"btn btn-primary\"\n                    style={{\"padding\": \"10px\", \"font-size\": \"16px\"}}>\n                        Register\n                    </button><br/><br/>\n                </div>\n            }\n\n            {\n                formState === \"validationFailed\" &&\n                <div className=\"alert alert-danger\">\n\n                    <ul>\n                        {\n                            errorsState.map(\n                                (error) => {\n                                    return <li>{error}</li>\n                                }\n                            )\n                        }\n                    </ul>\n\n                </div>\n            }\n\n            {\n                formState === \"successful\" &&\n                <div className=\"alert alert-success\">You have a successfully created an account</div>\n            }\n\n            {\n                formState === \"unsuccessful\" &&\n                <div className=\"alert alert-danger\">An error occured. Please try again.</div>\n            }\n\n            {\n                formState === \"loading\" &&\n                <p>Loading...</p>\n            }\n\n\n        </div>\n        </div>\n    )\n}\n\nexport default SellerRegistration;"]},"metadata":{},"sourceType":"module"}